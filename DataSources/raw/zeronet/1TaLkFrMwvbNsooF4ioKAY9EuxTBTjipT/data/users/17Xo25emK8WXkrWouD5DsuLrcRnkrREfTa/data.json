{
	"next_topic_id": 1,
	"topic": [],
	"topic_vote": {
		"1_1Gi4g59DwnkjgL9VmvmrfC95tMymyWFaaY": 1,
		"1_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9": 1
	},
	"next_comment_id": 10,
	"comment": {
		"1_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9": [
			{
				"comment_id": 1,
				"body": "Probably it's possible to implement blockchain for identity management even right now just using plain p2p files. The main problem is that designing and implementing blockchains is serious business and require you to be computer scientist. Also, traditional proof-of-work and mining seems wrong for identity management, because spammer can just spend more CPU to send more spam, so ideally there should be some captcha-based proof-of-work. It seems there are currently no blockchain technology like this at all, maybe it's an open problem for current state of research.",
				"added": 1482763199
			},
			{
				"comment_id": 2,
				"body": "> [sthetz](#comment_28_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9): I meant to say that ZeroNet's policy on user-submitted files is unreliable by design, in the sense that you can't control the content.\n\nBut you can choose whether this content is ok or not ok. For example if content has hyperlink to shop you can just ignore this content and not render it, if content is nickname and link to next node in content that after few hash manipulations give some thing with enough zeroes in start you can decide to trust this content as part of blockchain. ((I'm not an expert in this topic so this is just schematical example))",
				"added": 1482764812
			},
			{
				"comment_id": 3,
				"body": "I've finally found an article on FMS approach and I like it!\nhttp://blog.locut.us/2008/05/11/fms-spam-proof-anonymous-message-boards-on-freenet/\nTranslating to ZN, the basic idea is something like this: every user generates some captchas and publish to their folder. New users can solve these captchas and publish answers in their folders. Captcha owners can validate answers and publish in their folder their trust level to solver. Then frontend can use some summary trust level to choose if message should be rendered or not.",
				"added": 1482767183
			},
			{
				"comment_id": 4,
				"body": "So if some user start to spam, there could be downvote or report button which publishes trust penalty. So if many users will decide some user is spammer and click it, the summary trust level become below some minimal level and user messages would not be rendered after that at all.",
				"added": 1482767369
			},
			{
				"comment_id": 6,
				"body": "> [sthetz](#comment_29_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9): None of this will work with the current tools ZeroNet has. With self-signed anonymous certificates there is literally zero ways to restrict anyone from posting anything.\n\nThis will work and the most fun thing in this approach is that it's doesn't even matter what identity providers you use. New identity no matter where it comes from should provide captcha proof-of-work to start post anything. And captchas are generated and validated by other users. User files are signed by themselves so you can't forge others trust levels.",
				"added": 1482767908
			},
			{
				"comment_id": 7,
				"body": "> [sthetz](#comment_30_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9): You can create infinite amount of \"users\" with compromised \"captchas\" and use their \"proof of work\" to post anything.\n\nWhat if users need to be trusted to get their captchas-validations trusted. So when admin publishes zite he generates some pool of captchas, next user can become trusted for captcha-generation only by solving one of his captchas. Next user can become trusted for captcha generation by solving one of unsolved admin captchas or captchas generated by prev user (if he becomes trusted) and so on.",
				"added": 1482768683
			},
			{
				"comment_id": 8,
				"body": "If trusted user can instantly generate 1000 captchas, then it will be possible that spammer just solve 1 admin captcha, and then uses his trusted user to compromise captchas and make new compromised captcha-generators infinitely. But to not allow this happen, every new trusted user can be allowed to generate and validate only 1 captcha at first. And will get +1 captcha token for every 5 messages on imageboard which don't get him banned by collective voting.",
				"added": 1482769674
			},
			{
				"comment_id": 9,
				"body": "> [sthetz](#comment_31_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9): This sounds like a very complex solution. It's really a waste of time to try to implement this on client-side. I mean, it could probably work, but the amount of time and complexity isn't really worth it. Things like these should be implemented on ZeroNet server side. Until ZN devs give us some tools that are ready to use for combating spam, there will just be the possibility of spam. I won't try to reinvent the blockchain by myself, I have neither time nor skills to do so, unfortunately.\n\nTotally agree. If anyone decides to implement something like this on top of what is currently available, it should be either proof-of-concept to propose scheme for integration into ZN or at least highly reusable library which everyone can integrate into their ZN zites with minimal effort and \"math\".",
				"added": 1482770954
			}
		]
	},
	"comment_vote": {
		"12_1GkoHb4XqFDbLnxzrZxSzJK7dqnxmGyBRP": 1,
		"6_1KWfi9GbSvnLzLM3QbLSBhvRRiB2aq5rjH": 1,
		"215_1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh": 1,
		"4_1A2pTbDfU7P1JLSw3SZTiA1Lf7SRSu4Nn9": 1,
		"1_136Gy1TgLoykTBJzWfBCcmVrctB4VzNCPU": 1,
		"7_14nEeyHKvuhBchZp4N4eSwYVNAzvYfwKQF": 1,
		"25_1BNmjz9tBLY3M1tq2z7DKvA1LjFXYsmLd9": 1,
		"25_1PniNzyi8fygvwyBaLpA9oBDVWZ5fXuJUw": 1
	}
}